╔════════════════════════════════════════════════════════════════╗
║         POLIMISPORT BOT - QUICK REFERENCE                      ║
╚════════════════════════════════════════════════════════════════╝

📋 WHAT WAS FIXED
─────────────────────────────────────────────────────────────────
✅ Duplicate courses eliminated (deduplication logic added)
✅ Fit Center support added (separate from courses)
✅ Day selection improved for periodic bookings
✅ Database schema updated with is_fit_center column

📦 NEW FILES CREATED
─────────────────────────────────────────────────────────────────
migrate_db.py        - Database migration script
UPDATES.md          - Detailed changelog
TEST_GUIDE.md       - Testing instructions
QUICK_REFERENCE.txt - This file

🔧 SETUP COMMANDS
─────────────────────────────────────────────────────────────────
python migrate_db.py           # Add new database column
python refresh_courses.py      # Populate courses + fit center
python bot_db.py              # Start Telegram bot

🎯 BOT MENU STRUCTURE
─────────────────────────────────────────────────────────────────
Main Menu:
  📅 Prenota Corso          → Book course slot
  🏋️ Prenota Fit Center    → Book fit center slot
  📋 Le Mie Prenotazioni    → View your bookings
  🗓️ Visualizza Orari       → View schedules
      📚 Orari Corsi Platinum
      🏋️ Orari Fit Center
  🔄 Prenotazioni Periodiche → Manage periodic bookings
      ➕ Nuova (choose type → day → slots)
      📋 Lista

🔍 TESTING COMMANDS
─────────────────────────────────────────────────────────────────
# Check database counts
python -c "from database import Database; db = Database(); \
print(f'Courses: {len(db.get_all_courses())}'); \
print(f'Fit Center: {len(db.get_fit_center_slots())}')"

# Visualize data
python test_db_view.py

# Check for duplicates
sqlite3 polimisport.db "SELECT day_of_week, time_start, \
course_type, COUNT(*) as cnt FROM courses GROUP BY \
day_of_week, time_start, course_type HAVING cnt > 1"

# Test deduplication (run twice, count should be same)
python refresh_courses.py  # Note count
python refresh_courses.py  # Same count = working!

📊 EXPECTED RESULTS
─────────────────────────────────────────────────────────────────
After refresh_courses.py:
  - Courses: ~19 unique entries
  - Fit Center: ~45-50 slots
  - Total: ~64-69 entries
  - NO DUPLICATES even if run multiple times

🐛 TROUBLESHOOTING
─────────────────────────────────────────────────────────────────
Problem: No courses shown
Fix: python refresh_courses.py

Problem: Duplicates appear
Fix: python -c "from database import Database; \
      Database().clear_courses()" && python refresh_courses.py

Problem: "is_fit_center column not found"
Fix: python migrate_db.py

Problem: ModuleNotFoundError
Fix: pip install -r requirements.txt && playwright install chromium

🚀 RUNNING THE SYSTEM
─────────────────────────────────────────────────────────────────
Terminal 1: python bot_db.py              # Telegram interface
Terminal 2: python worker.py              # Process bookings
Terminal 3: python periodic_executor.py   # Handle recurring

Or use screen:
screen -dmS bot python bot_db.py
screen -dmS worker python worker.py
screen -dmS periodic python periodic_executor.py

📈 KEY IMPROVEMENTS
─────────────────────────────────────────────────────────────────
1. Deduplication: Uses (day, time, skill, instructor, location)
   as unique key - prevents duplicates across multiple refreshes

2. Fit Center: Fully integrated with own menu, viewing, and
   booking support (same level as courses)

3. Type Selection: Periodic bookings now let you choose between
   Course Platinum and Fit Center before selecting day

4. Clean Database: Migration adds column safely, refresh properly
   categorizes all entries

💾 DATABASE CHANGES
─────────────────────────────────────────────────────────────────
New column: is_fit_center INTEGER DEFAULT 0

New methods:
  - get_all_courses(include_fit_center=False)
  - get_fit_center_slots()

🎉 READY TO USE
─────────────────────────────────────────────────────────────────
1. python migrate_db.py     ✓
2. python refresh_courses.py ✓
3. python bot_db.py         ✓
4. Test in Telegram         ✓

═════════════════════════════════════════════════════════════════
For more details, see UPDATES.md and TEST_GUIDE.md
═════════════════════════════════════════════════════════════════
